# Generated by Django 4.0.2 on 2023-01-24 10:53

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PDBQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PDBSQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Proteins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('sequence', models.CharField(max_length=500, verbose_name='Sequence')),
                ('hydrolitic_activity', models.FloatField(verbose_name='HydrolyticActivity')),
                ('mic_value', models.FloatField(verbose_name='MICValue')),
                ('solubility', models.CharField(max_length=256, verbose_name='Solubility')),
                ('tiny', models.IntegerField(verbose_name='Tiny')),
                ('small', models.IntegerField(verbose_name='Small')),
                ('aliphatic', models.IntegerField(verbose_name='Aliphatic')),
                ('aromatic', models.IntegerField(verbose_name='Aromatic')),
                ('non_polar', models.IntegerField(verbose_name='NonPolar')),
                ('polar', models.IntegerField(verbose_name='Polar')),
                ('charged_aa', models.IntegerField(verbose_name='ChargedAA')),
                ('basic', models.IntegerField(verbose_name='Basic')),
                ('acidic', models.FloatField(verbose_name='Acidic')),
                ('mol_weight_tiny', models.FloatField(verbose_name='MolWeightTiny')),
                ('mol_weight_small', models.FloatField(verbose_name='MolWeightSmall')),
                ('mol_weight_apliphatic', models.FloatField(verbose_name='MolWeightAliphatic')),
                ('mol_weight_aromatic', models.FloatField(verbose_name='MolWeightAromatic')),
                ('mol_weight_non_polar', models.FloatField(verbose_name='MolWeightNonPolar')),
                ('mol_weight_polar', models.FloatField(verbose_name='MolWeightPolar')),
                ('mol_weight_charged', models.FloatField(verbose_name='MolWeightCharged')),
                ('mol_weight_basic', models.FloatField(verbose_name='MolWeightBasic')),
                ('mol_weight_acidic', models.FloatField(verbose_name='MolWeightAcidic')),
                ('molecular_weight', models.FloatField(verbose_name='MolecularWeight')),
                ('length', models.IntegerField(verbose_name='Length')),
                ('charge', models.FloatField(verbose_name='Charge')),
                ('p_i', models.FloatField(verbose_name='pI')),
                ('a_index', models.FloatField(verbose_name='AIndex')),
                ('instaIndex', models.FloatField(verbose_name='InstaIndex')),
                ('BomanIndex', models.FloatField(verbose_name='BomanIndex')),
                ('hydrophobicity', models.FloatField(verbose_name='Hydrophobicity')),
                ('hmoment_angle', models.FloatField(verbose_name='HydrophobicMoment')),
                ('transmembrane', models.IntegerField(verbose_name='Transmembrane')),
                ('extracellular', models.BooleanField(verbose_name='Extracellular')),
                ('cytoplasmic', models.BooleanField(verbose_name='Cytoplasmic')),
                ('hydrophobic_plots', models.FloatField(verbose_name='HydrophobicPlots')),
                ('hydropathy_plots', models.FloatField(verbose_name='HydropathyPlots')),
                ('disulfide_end', models.CharField(max_length=256, verbose_name='disulphides')),
                ('toxicity', models.CharField(max_length=256, verbose_name='Toxicity')),
                ('rmsf', models.FloatField(verbose_name='RMSF')),
                ('flexibility', models.FloatField(verbose_name='Flexibility')),
                ('score', models.IntegerField(verbose_name='Score')),
                ('pdb_name', models.CharField(max_length=256, verbose_name='PDBName')),
            ],
        ),
        migrations.CreateModel(
            name='Synthetic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('synthetic_Sequence', models.CharField(max_length=500, verbose_name='Synthetic_sequence')),
                ('synthetic_Tiny', models.IntegerField(verbose_name='Tiny')),
                ('synthetic_Small', models.IntegerField(verbose_name='Small')),
                ('synthetic_Aliphtic', models.IntegerField(verbose_name='Synthetic_aliphatic')),
                ('synthetic_Aromatic', models.IntegerField(verbose_name='Synthetic_aromatic')),
                ('synthetic_non_polar', models.IntegerField(verbose_name='Synthetic_Non_Polar-aa')),
                ('synthetic_polar', models.IntegerField(verbose_name='Synthetic_Polar-aa')),
                ('synthetic_charged_aa', models.IntegerField(verbose_name='Synthetic_Charged-aa')),
                ('synthetic_basic', models.IntegerField(verbose_name='Synthetic_Basic-aa')),
                ('synthetic_acidic', models.CharField(max_length=255, verbose_name='Synthetic_Acidic-aa')),
                ('synthetic_mol_weight_tiny', models.FloatField(max_length=255, verbose_name='Synthetic_Mole%-Tiny_aa')),
                ('synthetic_mol_weight_small', models.FloatField(max_length=255, verbose_name='Synthetic_Mole%-Small_aa')),
                ('synthetic_mol_weight_apliphatic', models.FloatField(max_length=255, verbose_name='Synthetic_Mole%-Aliphtic_aa')),
                ('synthetic_mol_weight_aromatic', models.CharField(max_length=255, verbose_name='Synthetic_Mole%-Aromatic_aa')),
                ('synthetic_mol_weight_non_polar', models.FloatField(max_length=255, verbose_name='Synthetic_Mole%-Non_Polar_aa')),
                ('synthetic_mol_weight_polar', models.FloatField(max_length=255, verbose_name='Synthetic_Mole%-Polar_aa')),
                ('synthetic_mol_weight_charged', models.FloatField(max_length=255, verbose_name='Synthetic_Mole%-Charged_aa')),
                ('synthetic_mol_weight_basic', models.FloatField(default=None, max_length=255, verbose_name='Synthetic_Mole%-Basic_aa')),
                ('synthetic_mol_weight_acidic', models.IntegerField(default=None, verbose_name='Synthetic_Mole%-Acidic_aa')),
                ('synthetic_molecular_weight', models.FloatField(default=None, max_length=255, verbose_name='Synthetic_mw')),
                ('synthetic_length', models.IntegerField(default=None, verbose_name='Synthetic_length')),
                ('synthetic_charge', models.FloatField(default=None, max_length=255, verbose_name='Synthetic_Charge')),
                ('synthetic_isolelectric_point', models.FloatField(max_length=255, verbose_name='Synthetic_Isolelectric point')),
                ('synthetic_aliphatic_Index', models.FloatField(default=None, max_length=255, verbose_name='Synthetic_Aliphatic Index')),
                ('synthetic_instability_Index', models.FloatField(max_length=255, verbose_name='Synthetic_Instability Index')),
                ('synthetic_bomanIndex', models.FloatField(max_length=255, verbose_name='Synthetic_BomanIndex')),
                ('synthetic_hydrophobicity', models.FloatField(max_length=255, verbose_name='Synthetic_Hydrophobicity')),
                ('synthetic_hydrophobic_moment', models.FloatField(max_length=255, verbose_name='Synthetic_Hydrophobic moment')),
                ('synthetic_toxicity', models.CharField(default=None, max_length=255, verbose_name='Synthetic_Toxicity')),
                ('synthetic_hemolytic_activity', models.FloatField(max_length=255, verbose_name='Synthetic_Hemolytic activity')),
                ('synthetic_score', models.IntegerField(default=None, verbose_name='Synthetic_Score')),
                ('synthetic_pdb_name', models.CharField(default=None, max_length=255, verbose_name='Synthetic_PDBName')),
            ],
        ),
        migrations.CreateModel(
            name='Dock_Proteins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('proteins', models.ManyToManyField(related_name='dock_protein', to='abampdb.Proteins')),
            ],
        ),
    ]
